Inorder to host any application in cloud or on on-premise, below are the basic setups that should be done.

Create a custom DNS for the application and secure it with a SSL certificate.
Create a Virtual Network and security rules for it.
Determine how many virtual machines are required 
Host the application in non prod and prod env.
Use a load balancer to distribute the traffic
Maintain and Monitor the application.

Terraform code would look like this:

In main.tf

terraform {
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "~>2.0"
    }
  }
}
provider "azurerm" {
  subscription_id   = "<sub_id>"
  tenant_id         = "<sub_tenant_id>"
  client_id         = "<serviceprincipal_appid>"
  client_secret     = "<service_principal_pwd>"
}

resource "azurerm_resource_group" "dev" {
  name  = "devrg"
  location = "east-us"
}
  
resource "azurerm_virtual_network" "dev" {
  name = "dev_vnet"
  location = azurerm_resource_group.dev.location
  resource_group_name = azurerm_resource_group.dev.name
  address_space = ["10.0.0.0/16"]
}
    
resource "azurerm_subnet" "dev" {
  name                 = "dev_subnet"
  resource_group_name  = azurerm_resource_group.dev.name
  virtual_network_name = azurerm_virtual_network.dev.name
  address_prefixes     = ["10.0.2.0/24"]
}

To parmeterize , use variables.tf and define a variable block in it.
variable "resource_group_location" {
  type        = string
  default     = "east-us"
}
and access this variable using var.resource_group_location

Similarly using the resource block of terraform, we can create virtual machines and other services required for the setup.
For this scenario, 2 vms for each app tier and web tier should be created. and a DB service. 
To execute this, below are the cmds

terraform init
terraform plan &
terraform apply
